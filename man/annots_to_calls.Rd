% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/process.R
\name{annots_to_calls}
\alias{annots_to_calls}
\title{Convert annotations to a call history}
\usage{
annots_to_calls(annots, gap = 0, groups = NULL)
}
\arguments{
\item{annots}{A dataframe containing at least \code{tstart} and \code{tend} columns,
and a \code{rec} column with recorder IDs. The timestamp columns are typically
numeric or POSIXt. AviaNZ annotations can be read into
this form directly with \code{\link[=readAnnots]{readAnnots()}} or \code{\link[=readAnnotsFile]{readAnnotsFile()}}.
Auxiliary columns appropriate for \code{\link[ascr:create.capt]{ascr::create.capt()}} (\code{bearing}, \code{dist}, \code{ss},
\code{toa}), if included, will be kept, although not merged cleverly -- if multiple
timestamps on a single recorder are merged into one capture, the
measures of the first of these fragments will be assigned to it.}

\item{gap}{A number in the same units as \verb{tstart,tend}.
Annotations that are separated by this much or more will be merged into
a single call. Default 0 merges any annotations that overlap or touch;
setting it larger is useful if the calls are often detected as multiple
annotations which should be merged into a single unit. Setting it below 0
will only merge annotations that overlap by at least \code{gap} time units, which
could help avoid falsely merging distinct calls if they occur frequently.}

\item{groups}{A list of vectors containing recorder IDs. Each of these vectors
will be processed separately (i.e. calls will not be merged across
these groups even if they coincide in time). This is useful for defining
non-overlapping recorder groups, to avoid false positive recaptures.
See examples.}
}
\value{
A dataframe containing recaptures of each call in long form:
columns \code{id} (assigned call ID string, typically the start of the earliest
timestamp included in that call) and \code{rec} (recorder ID on which this
capture or recapture was registered) will always be present,
as well as any auxiliary information in the input that is compatible with
the \code{ascr} package.
}
\description{
Converts a dataframe of annotation timestamps into call captures and recaptures,
for use in inference models such as acoustic SCR.
}
\details{
Acoustic SCR requires identifying which detections in a survey represent
re-captures of the same cue. This function does that simply by using
temporal overlap: any annotations that overlap in time by at least \code{gap}
seconds are assumed to be recaptures of the same call, and assigned a
shared call ID. Note that this will merge both recaptures across recorders,
and also annotations within each recorder, such as when several annotations
are produced for the same call.
Any further annotation details (call type, species) will be ignored,
i.e. calls labelled as different species, overlapping in time, will still be
merged. If you wish to use such information, split the data by the groups yourself
and apply this function to each separately.
}
\examples{
## rec1 captures what looks like two pieces of the same call
## rec2 recaptures part of the same call, and another cue:
annots <- data.frame(rec=c("rec1", "rec1", "rec2", "rec2"),
  tstart=c(0.0, 5.5, 1.5, 9), tend=c(5.0, 6.5, 6.0, 13))
## merge into two unique calls + 1 recapture:
annots_to_calls(annots, gap=0)
## or we can separate out the short annotation in rec1 as another call:
annots_to_calls(annots, gap=-1)

## example of using the groups argument:
## say there is a third recorder, but we know that it was too far
## to produce any true recaptures with the others (so any overlaps are
## just coincidences.)
## We can still use it in SCR, but we do not wish to merge its
## annotations, so we define it as a separate group here:
annots <- rbind(annots, data.frame(rec="rec3", tstart=3, tend=5))
annots_to_calls(annots, groups=list(c("rec1", "rec2"), "rec3"))
}
